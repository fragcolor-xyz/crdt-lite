[package]
name = "crdt-lite"
version = "0.3.0"
edition = "2021"
authors = ["CRDT Contributors"]
description = "A lightweight, column-based CRDT implementation in Rust"
license = "MIT"
repository = "https://github.com/sinkingsugar/crdt-lite"
homepage = "https://github.com/sinkingsugar/crdt-lite"
documentation = "https://docs.rs/crdt-lite"
readme = "README.md"
keywords = ["crdt", "distributed", "replication", "collaboration", "conflict-resolution"]
categories = ["data-structures", "algorithms", "concurrency"]

[dependencies]
serde = { version = "1.0", optional = true, default-features = false, features = ["derive", "alloc"] }
serde_json = { version = "1.0", optional = true, default-features = false, features = ["alloc"] }
# bincode 2.0 has proper no_std support - serde feature is needed for bincode::serde module
bincode = { version = "2.0.1", optional = true, default-features = false, features = ["alloc", "derive", "serde"] }
# hashbrown provides HashMap for no_std environments (it's the same implementation std uses)
# Only included when needed for no_std + alloc environments
hashbrown = { version = "0.15", features = ["serde"], optional = true }

[dev-dependencies]
serde_json = "1.0"
bincode = "2.0.1"

[features]
default = ["std"]
# When std is enabled, enable std feature on serde dependencies for HashMap serialization
std = ["serde?/std", "serde_json?/std", "bincode?/std"]
# For no_std environments with allocator support (requires hashbrown for HashMap)
alloc = ["dep:hashbrown"]
serde = ["dep:serde"]
json = ["serde", "dep:serde_json"]
binary = ["serde", "dep:bincode"]

[lib]
name = "crdt_lite"
path = "src/lib.rs"

[[test]]
name = "integration_tests"
path = "tests/integration_tests.rs"

[[example]]
name = "basic_usage"
path = "examples/basic_usage.rs"
